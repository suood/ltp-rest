package com.soften.ltp.model;

import java.util.ArrayList;
import java.util.List;

public class EmotionWordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public EmotionWordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUuidIsNull() {
            addCriterion("uuid is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("uuid is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(String value) {
            addCriterion("uuid =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(String value) {
            addCriterion("uuid <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(String value) {
            addCriterion("uuid >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(String value) {
            addCriterion("uuid >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(String value) {
            addCriterion("uuid <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(String value) {
            addCriterion("uuid <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLike(String value) {
            addCriterion("uuid like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotLike(String value) {
            addCriterion("uuid not like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<String> values) {
            addCriterion("uuid in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<String> values) {
            addCriterion("uuid not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(String value1, String value2) {
            addCriterion("uuid between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(String value1, String value2) {
            addCriterion("uuid not between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andWordIsNull() {
            addCriterion("word is null");
            return (Criteria) this;
        }

        public Criteria andWordIsNotNull() {
            addCriterion("word is not null");
            return (Criteria) this;
        }

        public Criteria andWordEqualTo(String value) {
            addCriterion("word =", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotEqualTo(String value) {
            addCriterion("word <>", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordGreaterThan(String value) {
            addCriterion("word >", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordGreaterThanOrEqualTo(String value) {
            addCriterion("word >=", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordLessThan(String value) {
            addCriterion("word <", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordLessThanOrEqualTo(String value) {
            addCriterion("word <=", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordLike(String value) {
            addCriterion("word like", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotLike(String value) {
            addCriterion("word not like", value, "word");
            return (Criteria) this;
        }

        public Criteria andWordIn(List<String> values) {
            addCriterion("word in", values, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotIn(List<String> values) {
            addCriterion("word not in", values, "word");
            return (Criteria) this;
        }

        public Criteria andWordBetween(String value1, String value2) {
            addCriterion("word between", value1, value2, "word");
            return (Criteria) this;
        }

        public Criteria andWordNotBetween(String value1, String value2) {
            addCriterion("word not between", value1, value2, "word");
            return (Criteria) this;
        }

        public Criteria andWordTypeIsNull() {
            addCriterion("word_type is null");
            return (Criteria) this;
        }

        public Criteria andWordTypeIsNotNull() {
            addCriterion("word_type is not null");
            return (Criteria) this;
        }

        public Criteria andWordTypeEqualTo(String value) {
            addCriterion("word_type =", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeNotEqualTo(String value) {
            addCriterion("word_type <>", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeGreaterThan(String value) {
            addCriterion("word_type >", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeGreaterThanOrEqualTo(String value) {
            addCriterion("word_type >=", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeLessThan(String value) {
            addCriterion("word_type <", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeLessThanOrEqualTo(String value) {
            addCriterion("word_type <=", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeLike(String value) {
            addCriterion("word_type like", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeNotLike(String value) {
            addCriterion("word_type not like", value, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeIn(List<String> values) {
            addCriterion("word_type in", values, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeNotIn(List<String> values) {
            addCriterion("word_type not in", values, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeBetween(String value1, String value2) {
            addCriterion("word_type between", value1, value2, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordTypeNotBetween(String value1, String value2) {
            addCriterion("word_type not between", value1, value2, "wordType");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountIsNull() {
            addCriterion("word_sense_count is null");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountIsNotNull() {
            addCriterion("word_sense_count is not null");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountEqualTo(Integer value) {
            addCriterion("word_sense_count =", value, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountNotEqualTo(Integer value) {
            addCriterion("word_sense_count <>", value, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountGreaterThan(Integer value) {
            addCriterion("word_sense_count >", value, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("word_sense_count >=", value, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountLessThan(Integer value) {
            addCriterion("word_sense_count <", value, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountLessThanOrEqualTo(Integer value) {
            addCriterion("word_sense_count <=", value, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountIn(List<Integer> values) {
            addCriterion("word_sense_count in", values, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountNotIn(List<Integer> values) {
            addCriterion("word_sense_count not in", values, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountBetween(Integer value1, Integer value2) {
            addCriterion("word_sense_count between", value1, value2, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseCountNotBetween(Integer value1, Integer value2) {
            addCriterion("word_sense_count not between", value1, value2, "wordSenseCount");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderIsNull() {
            addCriterion("word_sense_order is null");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderIsNotNull() {
            addCriterion("word_sense_order is not null");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderEqualTo(Integer value) {
            addCriterion("word_sense_order =", value, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderNotEqualTo(Integer value) {
            addCriterion("word_sense_order <>", value, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderGreaterThan(Integer value) {
            addCriterion("word_sense_order >", value, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("word_sense_order >=", value, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderLessThan(Integer value) {
            addCriterion("word_sense_order <", value, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderLessThanOrEqualTo(Integer value) {
            addCriterion("word_sense_order <=", value, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderIn(List<Integer> values) {
            addCriterion("word_sense_order in", values, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderNotIn(List<Integer> values) {
            addCriterion("word_sense_order not in", values, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderBetween(Integer value1, Integer value2) {
            addCriterion("word_sense_order between", value1, value2, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andWordSenseOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("word_sense_order not between", value1, value2, "wordSenseOrder");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeIsNull() {
            addCriterion("emotion_type is null");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeIsNotNull() {
            addCriterion("emotion_type is not null");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeEqualTo(String value) {
            addCriterion("emotion_type =", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeNotEqualTo(String value) {
            addCriterion("emotion_type <>", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeGreaterThan(String value) {
            addCriterion("emotion_type >", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeGreaterThanOrEqualTo(String value) {
            addCriterion("emotion_type >=", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeLessThan(String value) {
            addCriterion("emotion_type <", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeLessThanOrEqualTo(String value) {
            addCriterion("emotion_type <=", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeLike(String value) {
            addCriterion("emotion_type like", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeNotLike(String value) {
            addCriterion("emotion_type not like", value, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeIn(List<String> values) {
            addCriterion("emotion_type in", values, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeNotIn(List<String> values) {
            addCriterion("emotion_type not in", values, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeBetween(String value1, String value2) {
            addCriterion("emotion_type between", value1, value2, "emotionType");
            return (Criteria) this;
        }

        public Criteria andEmotionTypeNotBetween(String value1, String value2) {
            addCriterion("emotion_type not between", value1, value2, "emotionType");
            return (Criteria) this;
        }

        public Criteria andStrengthIsNull() {
            addCriterion("strength is null");
            return (Criteria) this;
        }

        public Criteria andStrengthIsNotNull() {
            addCriterion("strength is not null");
            return (Criteria) this;
        }

        public Criteria andStrengthEqualTo(Integer value) {
            addCriterion("strength =", value, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthNotEqualTo(Integer value) {
            addCriterion("strength <>", value, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthGreaterThan(Integer value) {
            addCriterion("strength >", value, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthGreaterThanOrEqualTo(Integer value) {
            addCriterion("strength >=", value, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthLessThan(Integer value) {
            addCriterion("strength <", value, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthLessThanOrEqualTo(Integer value) {
            addCriterion("strength <=", value, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthIn(List<Integer> values) {
            addCriterion("strength in", values, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthNotIn(List<Integer> values) {
            addCriterion("strength not in", values, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthBetween(Integer value1, Integer value2) {
            addCriterion("strength between", value1, value2, "strength");
            return (Criteria) this;
        }

        public Criteria andStrengthNotBetween(Integer value1, Integer value2) {
            addCriterion("strength not between", value1, value2, "strength");
            return (Criteria) this;
        }

        public Criteria andPolarityIsNull() {
            addCriterion("polarity is null");
            return (Criteria) this;
        }

        public Criteria andPolarityIsNotNull() {
            addCriterion("polarity is not null");
            return (Criteria) this;
        }

        public Criteria andPolarityEqualTo(Integer value) {
            addCriterion("polarity =", value, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityNotEqualTo(Integer value) {
            addCriterion("polarity <>", value, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityGreaterThan(Integer value) {
            addCriterion("polarity >", value, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityGreaterThanOrEqualTo(Integer value) {
            addCriterion("polarity >=", value, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityLessThan(Integer value) {
            addCriterion("polarity <", value, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityLessThanOrEqualTo(Integer value) {
            addCriterion("polarity <=", value, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityIn(List<Integer> values) {
            addCriterion("polarity in", values, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityNotIn(List<Integer> values) {
            addCriterion("polarity not in", values, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityBetween(Integer value1, Integer value2) {
            addCriterion("polarity between", value1, value2, "polarity");
            return (Criteria) this;
        }

        public Criteria andPolarityNotBetween(Integer value1, Integer value2) {
            addCriterion("polarity not between", value1, value2, "polarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionIsNull() {
            addCriterion("auxiliarye_emotion is null");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionIsNotNull() {
            addCriterion("auxiliarye_emotion is not null");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionEqualTo(String value) {
            addCriterion("auxiliarye_emotion =", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionNotEqualTo(String value) {
            addCriterion("auxiliarye_emotion <>", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionGreaterThan(String value) {
            addCriterion("auxiliarye_emotion >", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionGreaterThanOrEqualTo(String value) {
            addCriterion("auxiliarye_emotion >=", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionLessThan(String value) {
            addCriterion("auxiliarye_emotion <", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionLessThanOrEqualTo(String value) {
            addCriterion("auxiliarye_emotion <=", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionLike(String value) {
            addCriterion("auxiliarye_emotion like", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionNotLike(String value) {
            addCriterion("auxiliarye_emotion not like", value, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionIn(List<String> values) {
            addCriterion("auxiliarye_emotion in", values, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionNotIn(List<String> values) {
            addCriterion("auxiliarye_emotion not in", values, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionBetween(String value1, String value2) {
            addCriterion("auxiliarye_emotion between", value1, value2, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeEmotionNotBetween(String value1, String value2) {
            addCriterion("auxiliarye_emotion not between", value1, value2, "auxiliaryeEmotion");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthIsNull() {
            addCriterion("auxiliarye_strenth is null");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthIsNotNull() {
            addCriterion("auxiliarye_strenth is not null");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthEqualTo(Integer value) {
            addCriterion("auxiliarye_strenth =", value, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthNotEqualTo(Integer value) {
            addCriterion("auxiliarye_strenth <>", value, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthGreaterThan(Integer value) {
            addCriterion("auxiliarye_strenth >", value, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthGreaterThanOrEqualTo(Integer value) {
            addCriterion("auxiliarye_strenth >=", value, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthLessThan(Integer value) {
            addCriterion("auxiliarye_strenth <", value, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthLessThanOrEqualTo(Integer value) {
            addCriterion("auxiliarye_strenth <=", value, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthIn(List<Integer> values) {
            addCriterion("auxiliarye_strenth in", values, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthNotIn(List<Integer> values) {
            addCriterion("auxiliarye_strenth not in", values, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthBetween(Integer value1, Integer value2) {
            addCriterion("auxiliarye_strenth between", value1, value2, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryeStrenthNotBetween(Integer value1, Integer value2) {
            addCriterion("auxiliarye_strenth not between", value1, value2, "auxiliaryeStrenth");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityIsNull() {
            addCriterion("auxiliarye_polarity is null");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityIsNotNull() {
            addCriterion("auxiliarye_polarity is not null");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityEqualTo(Integer value) {
            addCriterion("auxiliarye_polarity =", value, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityNotEqualTo(Integer value) {
            addCriterion("auxiliarye_polarity <>", value, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityGreaterThan(Integer value) {
            addCriterion("auxiliarye_polarity >", value, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityGreaterThanOrEqualTo(Integer value) {
            addCriterion("auxiliarye_polarity >=", value, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityLessThan(Integer value) {
            addCriterion("auxiliarye_polarity <", value, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityLessThanOrEqualTo(Integer value) {
            addCriterion("auxiliarye_polarity <=", value, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityIn(List<Integer> values) {
            addCriterion("auxiliarye_polarity in", values, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityNotIn(List<Integer> values) {
            addCriterion("auxiliarye_polarity not in", values, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityBetween(Integer value1, Integer value2) {
            addCriterion("auxiliarye_polarity between", value1, value2, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andAuxiliaryePolarityNotBetween(Integer value1, Integer value2) {
            addCriterion("auxiliarye_polarity not between", value1, value2, "auxiliaryePolarity");
            return (Criteria) this;
        }

        public Criteria andFeatureIsNull() {
            addCriterion("feature is null");
            return (Criteria) this;
        }

        public Criteria andFeatureIsNotNull() {
            addCriterion("feature is not null");
            return (Criteria) this;
        }

        public Criteria andFeatureEqualTo(Integer value) {
            addCriterion("feature =", value, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureNotEqualTo(Integer value) {
            addCriterion("feature <>", value, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureGreaterThan(Integer value) {
            addCriterion("feature >", value, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureGreaterThanOrEqualTo(Integer value) {
            addCriterion("feature >=", value, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureLessThan(Integer value) {
            addCriterion("feature <", value, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureLessThanOrEqualTo(Integer value) {
            addCriterion("feature <=", value, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureIn(List<Integer> values) {
            addCriterion("feature in", values, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureNotIn(List<Integer> values) {
            addCriterion("feature not in", values, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureBetween(Integer value1, Integer value2) {
            addCriterion("feature between", value1, value2, "feature");
            return (Criteria) this;
        }

        public Criteria andFeatureNotBetween(Integer value1, Integer value2) {
            addCriterion("feature not between", value1, value2, "feature");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emotion_word
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 10 14:05:36 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emotion_word
     *
     * @mbggenerated Tue Mar 10 14:05:36 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}